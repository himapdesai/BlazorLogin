@page "/weather"
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]
@using BlazorApp.Data
@using BlazorApp.Data.Models
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext

<PageTitle>My Weather from app.db using EF</PageTitle>

<h1>My Weather from app.db using EF</h1>

<p>This component demonstrates showing data from the database.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else if (!forecasts.Any())
{
    <p><em>No weather data available.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th aria-label="Temperature in Celsius">Temp. (C)</th>
                <th aria-label="Temperature in Fahrenheit">Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<WeatherForecast>? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await DbContext.WeatherForecasts
            .OrderBy(w => w.Date)
            .ToListAsync();
    }
}
